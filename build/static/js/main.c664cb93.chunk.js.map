{"version":3,"sources":["lib/components/Navbar/Navbar.js","pages/Home/Cover/Cover.js","lib/components/ProphetCard/ProphetCard.js","lib/mockData.js","pages/Home/TopProphet/TopProphet.js","lib/components/PredictionCard/PredictionCard.js","pages/Home/TopPrediction/TopPrediction.js","pages/Home/Home.js","pages/Search/Search.js","pages/ProphetDetail/PredictionStrip/PredictionStrip.js","pages/ProphetDetail/ProphetDetail.js","pages/PredictionDetail/PredictionDetail.js","index.js"],"names":["Navbar","loadingTrue","loadingFalse","history","useHistory","useState","scroll","setScroll","window","addEventListener","scrollY","showBurger","setShowBurger","useLayoutEffect","updateSize","innerWidth","removeEventListener","handleBurgerClick","crossButton","document","getElementsByClassName","lastChild","click","console","log","inputText","setInputText","handleSearch","push","getElementById","value","SearchBar","className","id","placeholder","onChange","e","target","onPressEnter","onClick","size","mockLoading","to","Cover","color","ProphetCard","data","prophetId","src","image","alt","name","description","score","Rating","defaultValue","precision","readOnly","numPrediction","mockProphetsData","mockPredictionsData","predictionId","title","numReviews","anncouncedDate","resultRevealDate","status","settings","arrows","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","draggable","responsive","breakpoint","TopProphets","props","carouselRef","useRef","mockProphetList","setMockProphetList","useEffect","createData","prophetData","i","concat","Button","current","prev","variant","next","ref","map","index","key","PredictionCard","TopPredictions","mockPredictionList","setMockPredictionList","showLoading","setShowLoading","predictionData","showMore","temp","setTimeout","Home","Search","showProphets","setShowProphets","showPredictions","setShowPredictions","scrollTo","match","params","input","forEach","toLocaleLowerCase","includes","createSearchProphetData","createSearchPredictionData","createProphetData","createPredictionData","goBack","Object","keys","length","defaultProps","PredictionStrip","moreInfo","ProphetDetail","href","PredictionDetail","App","testImg","setTestImg","axios","get","then","response","img","spinning","path","render","exact","component","ReactDOM"],"mappings":"ohBAOaA,EAAS,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAC7BC,EAAUC,cADsC,EAI1BC,oBAAS,GAJiB,mBAI/CC,EAJ+C,KAIvCC,EAJuC,KAYtDC,OAAOC,iBAAiB,UAPC,WAClBD,OAAOE,SAAW,IACnBH,GAAU,GAEVA,GAAU,MATsC,MAelBF,oBAAS,GAfS,mBAe/CM,EAf+C,KAenCC,EAfmC,KAiBtDC,2BAAgB,WACb,IAAMC,EAAa,WAEZN,OAAOO,YAAc,IAAKH,GAAc,GACvCA,GAAc,IAItB,OAFAJ,OAAOC,iBAAiB,SAAUK,GAClCA,IACO,kBAAMN,OAAOQ,oBAAoB,SAAUF,MAClD,IAGH,IAAMG,EAAoB,WACvB,IAAIC,EAAcC,SAASC,uBAAuB,mBAAmB,GACjEF,EAAaA,EAAYG,UAAUC,QAClCC,QAAQC,IAAI,4BAhCkC,EAoCpBnB,mBAAS,IApCW,mBAoC/CoB,EApC+C,KAoCpCC,EApCoC,KAsChDC,EAAe,WAClBxB,EAAQyB,KAAR,kBAAwBH,IACxBN,SAASU,eAAe,eAAeC,MAAQ,IAG5CC,EAAY,WACf,OACG,yBAAKC,UAAU,sBACZ,yBAAKA,UAAU,aACZ,kBAAC,IAAD,CACGC,GAAG,cACHC,YAAY,YACZC,SAAU,SAACC,GAAD,OAAOV,EAAaU,EAAEC,OAAOP,QACvCQ,aAAc,kBAAMX,OAEvB,yBAAKK,UAAU,OAAOO,QAAS,kBAAMZ,MAClC,kBAAC,IAAD,CAAUa,KAAK,eAiCxBC,EAAc,WACjBxC,IACAC,KAgCH,OAAIS,EAEE,yBAAKqB,UAAW1B,EAAS,sBAAwB,UA5DjD,yBAAK0B,UAAU,UACZ,kBAAC,QAAD,KACG,4BACG,kBAAC,IAAD,CAAMU,GAAG,IAAIH,QAAStB,GACnB,4CAEH,kBAAC,IAAD,CAAMyB,GAAG,YAAYH,QAAStB,GAC3B,wCAEH,kBAAC,IAAD,CAAMyB,GAAG,eAAeH,QAAStB,GAC9B,4CAEH,kBAAC,IAAD,CAAMyB,GAAG,GAAGH,QAAStB,GAClB,wCAEH,kBAAC,IAAD,CAAMyB,GAAG,GAAGH,QAAStB,GAClB,yCA8CRc,KAKJ,yBAAKC,UAAW1B,EAAS,sBAAwB,UApCjD,wBAAI0B,UAAU,WACX,kBAAC,IAAD,CAAMU,GAAG,IAAIH,QAASE,GACnB,qCAEH,kBAAC,IAAD,CAAMC,GAAG,YAAYH,QAASE,GAC3B,wCAEH,kBAAC,IAAD,CAAMC,GAAG,gBACN,6CA8BFX,IAtBJ,wBAAIC,UAAU,YACX,kBAAC,IAAD,CAAMU,GAAG,eACN,wCAEH,kBAAC,IAAD,CAAMA,GAAG,IACN,yC,iBCjGAC,MApBf,WACG,OACG,yBAAKX,UAAU,SACZ,yBAAKA,UAAU,aACZ,wBAAIA,UAAU,aAAd,oBACA,uBAAGA,UAAU,aAAb,iTAQH,yBAAKA,UAAU,QACZ,kBAAC,IAAD,CAAaY,MAAM,QAAQJ,KAAK,a,yBC6B7BK,MA3Cf,YAA8B,IAARC,EAAO,EAAPA,KACnB,OAAIA,EAEE,kBAAC,IAAD,CACGd,UAAU,cACVU,GAAE,yBAAoBI,EAAKC,YAE3B,yBAAKC,IAAKF,EAAKG,MAAOC,IAAI,YAC1B,yBAAKlB,UAAU,UACZ,yBAAKA,UAAU,eACZ,wBAAIC,GAAG,QAAQa,EAAKK,MACpB,uBAAGlB,GAAG,eAAea,EAAKM,cAE7B,yBAAKpB,UAAU,iBACZ,yBAAKA,UAAU,SACZ,uBAAGA,UAAU,eACV,8BAAOc,EAAKO,OADf,OAGA,kBAACC,EAAA,EAAD,CACGH,KAAK,mBACLI,aACGT,EAAKO,MAAQP,EAAKO,MAAQ,EAAI,EAEjCG,UAAW,GACXhB,KAAK,QACLiB,UAAQ,IAEX,6CAEH,6BACA,yBAAKzB,UAAU,kBACZ,8BAAOc,EAAKY,eACZ,8CAOR,I,kBC5CPC,EAAmB,CACtB,CACGZ,UAAW,EACXE,MACG,iFACHE,KAAM,QACNE,MAAO,IACPK,cAAe,GACfN,YACG,0JAEN,CACGL,UAAW,EACXE,MACG,oJACHE,KAAM,iBACNE,MAAO,IACPK,cAAe,EACfN,YACG,iJAEN,CACGL,UAAW,EACXE,MACG,gQACHE,KAAM,aACNE,MAAO,IACPK,cAAe,IACfN,YACG,6IAEN,CACGL,UAAW,EACXE,MACG,4EACHE,KAAM,UACNE,MAAO,IACPK,cAAe,GACfN,YACG,8JAIHQ,EAAsB,CACzB,CACGC,aAAc,EACdd,UAAW,EACXE,MACG,sIACHa,MAAO,2CACPV,YACG,uOACHC,MAAO,GACPU,WAAY,GACZC,eAAgB,OAChBC,iBAAkB,aAClBC,OAAQ,mBAEX,CACGL,aAAc,EACdd,UAAW,EACXE,MACG,mIACHa,MAAO,wDACPV,YACG,2JACHC,MAAO,IACPU,WAAY,IACZC,eAAgB,aAChBC,iBAAkB,aAClBC,OAAQ,mBAEX,CACGL,aAAc,EACdd,UAAW,EACXE,MAAO,uDACPa,MACG,8EACHV,YACG,6MACHC,MAAO,EACPU,WAAY,EACZC,eAAgB,aAChBC,iBAAkB,aAClBC,OAAQ,WAEX,CACGL,aAAc,EACdd,UAAW,EACXE,MAAO,6DACPa,MAAO,yDACPV,YACG,wUACHC,MAAO,IACPU,WAAY,EACZC,eAAgB,aAChBC,iBAAkB,UAClBC,OAAQ,YCnFRC,EAAW,CACdC,QAAQ,EACRC,KAAM,CAACrC,UAAW,gBAClBsC,UAAU,EACVC,MAAO,IACPC,aAAc,EACdC,eAAgB,EAChBC,aAAc,EACdC,WAAW,EACXC,WAAY,CACT,CACGC,WAAY,KACZV,SAAU,CACPK,aAAc,EACdC,eAAgB,IAGtB,CACGI,WAAY,KACZV,SAAU,CACPK,aAAc,EACdC,eAAgB,IAGtB,CACGI,WAAY,KACZV,SAAU,CACPK,aAAc,EACdC,eAAgB,IAGtB,CACGI,WAAY,KACZV,SAAU,CACPK,aAAc,EACdC,eAAgB,IAGtB,CACGI,WAAY,IACZV,SAAU,CACPK,aAAc,EACdC,eAAgB,MA8DbK,MAxDf,SAAqBC,GAClB,IAAMC,EAAcC,mBADK,EAUqB5E,mBAAS,IAV9B,mBAUlB6E,EAVkB,KAUDC,EAVC,KAYzBC,qBAAU,WACPC,MACA,IAEH,IAAMA,EAAa,WAEhB,IADA,IAAIC,EAAc,GACTC,EAAI,EAAGA,EAAI,EAAGA,IACpBD,EAAcA,EAAYE,OAAO7B,GAEpCwB,EAAmBG,IAGtB,OACG,yBAAKtD,UAAU,eACZ,yBAAKA,UAAU,mBACZ,4CACA,yBAAKA,UAAU,gBACZ,kBAACyD,EAAA,EAAD,CAAQlD,QAvBpB,WACGyC,EAAYU,QAAQC,QAsBoBC,QAAQ,YACpC,kBAAC,IAAD,CAAehD,MAAM,QAAQJ,KAAK,WAErC,kBAACiD,EAAA,EAAD,CAAQlD,QA7BpB,WACGyC,EAAYU,QAAQG,QA4BoBD,QAAQ,YACpC,kBAAC,IAAD,CAAgBhD,MAAM,QAAQJ,KAAK,WAEtC,kBAAC,IAAD,CAAME,GAAG,aACN,kBAAC+C,EAAA,EAAD,CAAQG,QAAQ,YAAhB,eAKT,yBAAK5D,UAAU,gBACZ,kBAAC,IAAD,eAAU8D,IAAKd,GAAiBb,GAC5Be,EAAgBa,KAAI,SAACjD,EAAMkD,GACzB,OACG,yBAAKC,IAAKD,EAAOhE,UAAU,wBACxB,kBAAC,EAAD,CAAac,KAAMA,Y,cC7D5BoD,MA1Cf,YAAiC,IAARpD,EAAO,EAAPA,KACtB,OACG,kBAAC,IAAD,CACGd,UAAU,iBACVU,GAAE,4BAAuBI,EAAKe,eAE9B,yBAAKb,IAAKF,EAAKG,MAAOC,IAAI,kBAC1B,yBAAKlB,UAAU,UACZ,yBAAKA,UAAU,QACZ,uBAAGA,UAAU,UAAb,WAA+Bc,EAAKoB,QACpC,uBAAGlC,UAAU,SAASc,EAAKgB,OAC3B,uBAAG9B,UAAU,eAAec,EAAKM,cAEpC,yBAAKpB,UAAU,WACZ,yBAAKA,UAAU,kBACZ,yBAAKA,UAAU,mBACZ,uBAAGA,UAAU,yBACV,8BAAOc,EAAKO,OADf,OAGA,kBAACC,EAAA,EAAD,CACGH,KAAK,mBACLI,aAAcT,EAAKO,MAAQ,EAC3BG,UAAW,GACXhB,KAAK,QACLiB,UAAQ,IAEX,uBAAGzB,UAAU,uBAAb,qBAEH,6BACA,yBAAKA,UAAU,cACZ,yBAAKA,UAAU,UACZ,8BAAOc,EAAKiB,aAEf,uBAAG/B,UAAU,eAAb,iB,SC7BRmE,EAAiB,SAACpB,GAAW,IAAD,EACc1E,mBAAS,IADvB,mBAC/B+F,EAD+B,KACXC,EADW,OAGAhG,oBAAS,GAHT,mBAG/BiG,EAH+B,KAGlBC,EAHkB,KAKtCnB,qBAAU,WACPC,MACA,IAEH,IAAMA,EAAa,WAEhB,IADA,IAAImB,EAAiB,GACZjB,EAAI,EAAGA,EAAI,EAAGA,IACpBiB,EAAiBA,EAAehB,OAAO5B,GAE1CyC,EAAsBG,IAGnBC,EAAW,WACdF,GAAe,GACf,IAAIG,EAAON,EAAmBZ,OAAO5B,GACrC+C,YAAW,WACRN,EAAsBK,GACtBH,GAAe,KACf,MAeN,OACG,yBAAKvE,UAAU,kBACZ,yBAAKA,UAAU,mBACZ,+CACA,yBAAKA,UAAU,gBACZ,kBAAC,IAAD,CAAMU,GAAG,gBACN,kBAAC+C,EAAA,EAAD,CAAQG,QAAQ,YAAhB,eAIT,yBAAK5D,UAAU,mBACXoE,EAAmBL,KAAI,SAACjD,EAAMkD,GAC5B,OAAO,kBAAC,EAAD,CAAgBC,IAAKD,EAAOlD,KAAMA,QAG/C,yBAAKd,UAAU,gBA1BdsE,EACM,kBAAC,IAAD,CAAM9D,KAAK,UAGf,kBAACiD,EAAA,EAAD,CAAQlD,QAASkE,EAAUb,QAAQ,YAAnC,gBClCCgB,G,OAAO,WACjB,OACG,yBAAK5E,UAAU,QACZ,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,S,kBCDI6E,EAAS,SAAC9B,GAAW,IAAD,EACU1E,mBAAS0E,EAAM+B,cADzB,mBACvBA,EADuB,KACTC,EADS,OAGgB1G,mBAAS0E,EAAMiC,iBAH/B,mBAGvBA,EAHuB,KAGNC,EAHM,OAKgB5G,mBAAS,IALzB,mBAKvB6E,EALuB,KAKNC,EALM,OAOsB9E,mBAAS,IAP/B,mBAOvB+F,EAPuB,KAOHC,EAPG,OASIhG,oBAAS,GATb,mBASvBoB,EATuB,KASZC,EATY,KAkD9B0D,qBAAU,WACP5E,OAAO0G,SAAS,EAAG,KACnB,IAEH9B,qBAAU,WAGP,GAFA2B,EAAgBhC,EAAM+B,cACtBG,EAAmBlC,EAAMiC,iBACrBjC,EAAMoC,MAAMA,MAAMC,OAAOC,MAAO,CACjC,IAAMA,EAAQtC,EAAMoC,MAAMA,MAAMC,OAAOC,OA7Bb,SAACA,GAC9B,IAAI/B,EAAc,GAClB3B,EAAiB2D,SAAQ,SAACxE,GACnBA,EAAKK,MAAQL,EAAKK,KAAKoE,oBAAoBC,SAASH,EAAME,sBAC3DjC,EAAY1D,KAAKkB,MAGvBqC,EAAmBG,GAuBhBmC,CAAwBJ,GApBK,SAACA,GACjC,IAAIb,EAAiB,GACrB5C,EAAoB0D,SAAQ,SAACxE,GACtBA,EAAKgB,OAAShB,EAAKgB,MAAMyD,oBAAoBC,SAASH,EAAME,sBAC7Df,EAAe5E,KAAKkB,MAG1BuD,EAAsBG,GAcnBkB,CAA2BL,QAhDP,WAEvB,IADA,IAAI/B,EAAc,GACTC,EAAI,EAAGA,EAAI,EAAGA,IACpBD,EAAcA,EAAYE,OAAO7B,GAEpCwB,EAAmBG,GA6ChBqC,GAzCuB,WAE1B,IADA,IAAInB,EAAiB,GACZjB,EAAI,EAAGA,EAAI,EAAGA,IACpBiB,EAAiBA,EAAehB,OAAO5B,GAE1CyC,EAAsBG,GAqCnBoB,GAEHlG,EAAaqD,EAAMoC,MAAMA,MAAMC,OAAOC,SACtC,CACAtC,EAAM+B,aACN/B,EAAMiC,gBACNjC,EAAMoC,MAAMA,MAAMC,OAAOC,QAI5B,IAAMlH,EAAUC,cA4ChB,OACG,yBAAK4B,UAAU,UACZ,yBAAKA,UAAU,mBACZ,yBAAKA,UAAU,uBACZ,yBAAKA,UAAU,cACZ,yBACGA,UAAU,OACVO,QAAS,WACNpC,EAAQ0H,WAGX,kBAAC,IAAD,CAAoBrF,KAAK,SAE5B,sCAvBRf,IAGAqF,EACM,eAEA,qBAmBD,yBAAK9E,UAAU,yBACZ,yBACGA,UACG8E,EACK,kCACA,eAERvE,QAAS,WACNwE,GAAgB,GAChBE,GAAmB,KAGtB,kBAACxB,EAAA,EAAD,kBAEH,yBACGzD,UACGgF,EACK,kCACA,eAERzE,QAAS,WACNwE,GAAgB,GAChBE,GAAmB,KAGtB,kBAACxB,EAAA,EAAD,sBA/EXqB,EAC2C,IAAxCgB,OAAOC,KAAK7C,GAAiB8C,OAE3B,yBAAKhG,UAAU,SAAf,mBAIA,yBAAKA,UAAU,sBACXkD,EAAgBa,KAAI,SAACjD,EAAMkD,GACzB,OAAO,kBAAC,EAAD,CAAaC,IAAKD,EAAOlD,KAAMA,QAKjDkE,EAC8C,IAA3Cc,OAAOC,KAAK3B,GAAoB4B,OAC1B,yBAAKhG,UAAU,SAAf,mBAGP,yBAAKA,UAAU,yBACXoE,EAAmBL,KAAI,SAACjD,EAAMkD,GAC5B,OAAO,kBAAC,EAAD,CAAgBC,IAAKD,EAAOlD,KAAMA,aAPrD,EAqES,yBAAKd,UAAU,WAGlB,yBAAKA,UAAU,SACZ,yBAAKA,UAAU,oBACZ,uBAAGA,UAAU,SAAb,SAEH,yBAAKA,UAAU,sBACZ,uBAAGA,UAAU,SAAb,eAQlB6E,EAAOoB,aAAe,CACnBd,MAAO,CAAEA,MAAO,CAAEC,OAAQ,CAAEC,OAAO,M,kBCxLzBa,EAAkB,SAACnD,GAC7B,OACG,kBAAC,IAAD,CACG/C,UAAU,kBACVU,GAAE,4BAAuBqC,EAAMjC,KAAKe,eAEpC,yBAAK7B,UAAU,QACZ,uBAAGA,UAAU,UAAb,UAA8B+C,EAAMjC,KAAKoB,QACzC,uBAAGlC,UAAU,SAAS+C,EAAMjC,KAAKgB,OACjC,uBAAG9B,UAAU,eAAe+C,EAAMjC,KAAKM,cAE1C,yBAAKpB,UAAU,UACZ,uBAAGA,UAAU,UACV,8BAAO+C,EAAMjC,KAAKO,OADrB,OAGA,kDCbNiC,EAAc,CACjB,CACGvC,UAAW,EACXE,MACG,iFACHE,KAAM,QACNE,MAAO,IACPK,cAAe,GACfN,YACG,yJACH+E,SAAU,KAIV3B,EAAiB,CACpB3C,aAAc,EACdd,UAAW,EACXE,MACG,sIACHa,MAAO,2CACPV,YACG,uOACHC,MAAO,GACPU,WAAY,GACZC,eAAgB,OAChBC,iBAAkB,aAClBC,OAAQ,mBAGEkE,EAAgB,SAACrD,GAI3B,OAHAK,qBAAU,WACP5E,OAAO0G,SAAS,EAAG,KACnB,IAEA,yBAAKlF,UAAU,UACZ,yBAAKA,UAAU,WACZ,yBAAKA,UAAU,WACZ,yBAAKA,UAAU,yBACZ,oDAEH,kBAAC,EAAD,CAAac,KAAMwC,EAAY,KAC/B,uBAAG+C,KAAI,wCAAmC/C,EAAY,GAAGnC,OACtD,kBAACsC,EAAA,EAAD,CAAQG,QAAQ,YAAhB,eAGN,yBAAK5D,UAAU,WACZ,yBAAKA,UAAU,yBACZ,4CAEH,yBAAKA,UAAU,kBACZ,kBAAC,EAAD,CAAiBc,KAAM0D,IACvB,kBAAC,EAAD,CAAiB1D,KAAM0D,IACvB,kBAAC,EAAD,CAAiB1D,KAAM0D,KAE1B,kBAACf,EAAA,EAAD,CAAQG,QAAQ,YAAhB,cAEH,yBAAK5D,UAAU,WACZ,yBAAKA,UAAU,yBACZ,wCACA,uBAAGqG,KAAI,KACJ,kBAAC5C,EAAA,EAAD,CAAQG,QAAQ,YAAhB,aAGN,kBAACH,EAAA,EAAD,CAAQG,QAAQ,YAAhB,eAGLb,EAAMoC,MAAMA,MAAMC,OAAOnF,KCnE7BuE,G,OAAiB,CAAC,CACrB3C,aAAc,EACdd,UAAW,EACXE,MACG,sIACHa,MAAO,2CACPV,YACG,uOACHC,MAAO,GACPU,WAAY,GACZC,eAAgB,OAChBC,iBAAkB,aAClBC,OAAQ,qBAGEoE,EAAmB,SAACvD,GAI9B,OAHAK,qBAAU,WACP5E,OAAO0G,SAAS,EAAG,KACnB,IAEA,yBAAKlF,UAAU,UACZ,yBAAKA,UAAU,WACZ,yBAAKA,UAAU,WACZ,yBAAKA,UAAU,yBACZ,uDAEH,kBAAC,EAAD,CAAgBc,KAAM0D,EAAe,KACrC,yBAAKxE,UAAU,WACZ,uBAAGqG,KAAI,KACJ,kBAAC5C,EAAA,EAAD,CAAQG,QAAQ,YAAhB,iBAEH,uBAAGyC,KAAI,kCACJ,kBAAC5C,EAAA,EAAD,CAAQG,QAAQ,YAAhB,mBAIT,yBAAK5D,UAAU,WACZ,yBAAKA,UAAU,yBACZ,uCACA,uBAAGqG,KAAI,KACJ,kBAAC5C,EAAA,EAAD,CAAQG,QAAQ,YAAhB,0BAGN,kBAACH,EAAA,EAAD,CAAQG,QAAQ,YAAhB,eAGLrE,QAAQC,IAAIuD,EAAMoC,MAAMA,MAAMC,OAAOnF,M,kBCtC/C,SAASsG,IAAO,IAAD,EAC0BlI,oBAAS,GADnC,mBACLiG,EADK,KACQC,EADR,OAEkBlG,mBAAS,IAF3B,mBAELmI,EAFK,KAEIC,EAFJ,KAqBZ,OAPArD,qBAAU,WACPsD,IAAMC,IAAI,YAAYC,MAAK,SAACC,GACzBtH,QAAQC,IAAIqH,EAAS/F,KAAK,GAAGgG,KAC7BL,EAAWI,EAAS/F,KAAK,GAAGgG,UAE/B,IAGA,kBAAC,IAAD,KACG,yBAAK9G,UAAU,OACZ,kBAAC,EAAD,CAAQ/B,YApBG,WACjBsG,GAAe,IAmByBrG,aAhBtB,WAClByG,YAAW,WACRJ,GAAe,KACf,QAcG,kBAAC,IAAD,CAAM/D,KAAK,QAAQuG,SAAUzC,GAC1B,kBAAC,IAAD,KACG,kBAAC,IAAD,CACG0C,KAAK,qBACLC,OAAQ,SAAC9B,GAAD,OAAW,kBAAC,EAAD,CAAeA,MAAOA,OAE5C,kBAAC,IAAD,CACG6B,KAAK,wBACLC,OAAQ,SAAC9B,GAAD,OAAW,kBAAC,EAAD,CAAkBA,MAAOA,OAE/C,kBAAC,IAAD,CACG6B,KAAK,YACLE,OAAK,EACLD,OAAQ,kBACL,kBAAC,EAAD,CAAQnC,cAAc,EAAME,iBAAiB,OAGnD,kBAAC,IAAD,CACGgC,KAAK,eACLE,OAAK,EACLD,OAAQ,kBACL,kBAAC,EAAD,CAAQnC,cAAc,EAAOE,iBAAiB,OAGpD,kBAAC,IAAD,CACGgC,KAAK,iBACLC,OAAQ,SAAC9B,GAAD,OACL,kBAAC,EAAD,CACGL,cAAc,EACdE,iBAAiB,EACjBG,MAAOA,OAIhB,kBAAC,IAAD,CACG6B,KAAK,cACLC,OAAQ,kBACL,6BACG,yBAAKjG,IAAKwF,EAAStF,IAAI,gBAIhC,kBAAC,IAAD,CAAO8F,KAAK,IAAIG,UAAWvC,QAQ7CwC,IAASH,OAAO,kBAACV,EAAD,MAASpH,SAASU,eAAe,W","file":"static/js/main.c664cb93.chunk.js","sourcesContent":["import React, { useState, useLayoutEffect } from \"react\"\r\nimport \"./Navbar.css\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { GoSearch } from \"react-icons/go\"\r\nimport { Input } from \"antd\"\r\nimport { slide as Menu } from \"react-burger-menu\"\r\n\r\nexport const Navbar = ({ loadingTrue, loadingFalse }) => {\r\n   const history = useHistory()\r\n\r\n   //Chaneg NavBar Background\r\n   const [scroll, setScroll] = useState(false)\r\n   const changeBackground = () => {\r\n      if (window.scrollY >= 100) {\r\n         setScroll(true)\r\n      } else {\r\n         setScroll(false)\r\n      }\r\n   }\r\n   window.addEventListener(\"scroll\", changeBackground)\r\n\r\n   //Hamburger Responsive\r\n   const [showBurger, setShowBurger] = useState(false)\r\n\r\n   useLayoutEffect(() => {\r\n      const updateSize = () => {\r\n         // console.log([window.innerWidth, window.innerHeight])\r\n         if (window.innerWidth <= 768) setShowBurger(true)\r\n         else setShowBurger(false)\r\n      }\r\n      window.addEventListener(\"resize\", updateSize)\r\n      updateSize()\r\n      return () => window.removeEventListener(\"resize\", updateSize)\r\n   }, [])\r\n\r\n   //Close Nav Burger\r\n   const handleBurgerClick = () => {\r\n      let crossButton = document.getElementsByClassName(\"bm-cross-button\")[0]\r\n      if (crossButton) crossButton.lastChild.click()\r\n      else console.log(\"Cannot find CrossButton\")\r\n   }\r\n\r\n   //Search Input\r\n   const [inputText, setInputText] = useState(\"\")\r\n\r\n   const handleSearch = () => {\r\n      history.push(`/search/${inputText}`)\r\n      document.getElementById(\"SearchInput\").value = \"\"\r\n   }\r\n\r\n   const SearchBar = () => {\r\n      return (\r\n         <div className=\"SearchBarContainer\">\r\n            <div className=\"SearchBar\">\r\n               <Input\r\n                  id=\"SearchInput\"\r\n                  placeholder=\"Search...\"\r\n                  onChange={(e) => setInputText(e.target.value)}\r\n                  onPressEnter={() => handleSearch()}\r\n               />\r\n               <div className=\"Icon\" onClick={() => handleSearch()}>\r\n                  <GoSearch size=\"1.2rem\" />\r\n               </div>\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n\r\n   const Burger = () => {\r\n      return (\r\n         <div className=\"Burger\">\r\n            <Menu>\r\n               <ul>\r\n                  <Link to=\"/\" onClick={handleBurgerClick}>\r\n                     <li>The Prohets</li>\r\n                  </Link>\r\n                  <Link to=\"/prophets\" onClick={handleBurgerClick}>\r\n                     <li>Prohets</li>\r\n                  </Link>\r\n                  <Link to=\"/predictions\" onClick={handleBurgerClick}>\r\n                     <li>Predictions</li>\r\n                  </Link>\r\n                  <Link to=\"\" onClick={handleBurgerClick}>\r\n                     <li>Sign In</li>\r\n                  </Link>\r\n                  <Link to=\"\" onClick={handleBurgerClick}>\r\n                     <li>Login</li>\r\n                  </Link>\r\n               </ul>\r\n            </Menu>\r\n         </div>\r\n      )\r\n   }\r\n\r\n   const mockLoading = () => {\r\n      loadingTrue()\r\n      loadingFalse()\r\n   }\r\n\r\n   const NavLeft = () => {\r\n      return (\r\n         <ul className=\"NavLeft\">\r\n            <Link to=\"/\" onClick={mockLoading}>\r\n               <li>Home</li>\r\n            </Link>\r\n            <Link to=\"/prophets\" onClick={mockLoading}>\r\n               <li>Prohets</li>\r\n            </Link>\r\n            <Link to=\"/predictions\">\r\n               <li>Predictions</li>\r\n            </Link>\r\n         </ul>\r\n      )\r\n   }\r\n\r\n   const NavRight = () => {\r\n      return (\r\n         <ul className=\"NavRight\">\r\n            <Link to=\"/testImg123\">\r\n               <li>Sign In</li>\r\n            </Link>\r\n            <Link to=\"\">\r\n               <li>Login</li>\r\n            </Link>\r\n         </ul>\r\n      )\r\n   }\r\n\r\n   if (showBurger) {\r\n      return (\r\n         <div className={scroll ? \"Navbar NavbarActive\" : \"Navbar\"}>\r\n            {Burger()}\r\n            {SearchBar()}\r\n         </div>\r\n      )\r\n   } else {\r\n      return (\r\n         <div className={scroll ? \"Navbar NavbarActive\" : \"Navbar\"}>\r\n            {NavLeft()}\r\n            {SearchBar()}\r\n            {NavRight()}\r\n         </div>\r\n      )\r\n   }\r\n}\r\n","import React from \"react\"\r\nimport \"./Cover.css\"\r\n//icon\r\nimport { VscFoldDown } from \"react-icons/vsc\"\r\n\r\nfunction Cover() {\r\n   return (\r\n      <div className=\"Cover\">\r\n         <div className=\"CoverText\">\r\n            <h1 className=\"TextHover\">Find The Prohets</h1>\r\n            <p className=\"TextHover\">\r\n               Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris\r\n               ultrices finibus urna, ac tempus nunc ornare sed. Donec bibendum\r\n               ante a sollicitudin malesuada. Suspendisse aliquet tellus nisl,\r\n               in facilisis metus ullamcorper eget. In non est ut orci faucibus\r\n               rutrum eu nec odio. Cras finibus eleifend.\r\n            </p>\r\n         </div>\r\n         <div className=\"Icon\">\r\n            <VscFoldDown color=\"white\" size=\"1.8em\" />\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Cover\r\n","import React from \"react\"\r\nimport \"./ProphetCard.css\"\r\nimport Rating from \"@material-ui/lab/Rating\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nfunction ProphetCard({data}) {\r\n   if (data) {\r\n      return (\r\n         <Link\r\n            className=\"ProphetCard\"\r\n            to={`/prophetDetail/${data.prophetId}`}\r\n         >\r\n            <img src={data.image} alt=\"profile\" />\r\n            <div className=\"NotImg\">\r\n               <div className=\"TextSection\">\r\n                  <h4 id=\"name\">{data.name}</h4>\r\n                  <p id=\"description\">{data.description}</p>\r\n               </div>\r\n               <div className=\"NumberSection\">\r\n                  <div className=\"Score\">\r\n                     <p className=\"ScoreNumber\">\r\n                        <span>{data.score}</span>/10\r\n                     </p>\r\n                     <Rating\r\n                        name=\"half-rating-read\"\r\n                        defaultValue={\r\n                           data.score ? data.score / 2 : 0\r\n                        }\r\n                        precision={0.1}\r\n                        size=\"small\"\r\n                        readOnly\r\n                     />\r\n                     <p>Prophet Score</p>\r\n                  </div>\r\n                  <hr />\r\n                  <div className=\"NumPredictions\">\r\n                     <span>{data.numPrediction}</span>\r\n                     <p>Predictions</p>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </Link>\r\n      )\r\n   } else {\r\n      return \"\"\r\n   }\r\n}\r\n\r\nexport default ProphetCard\r\n","const mockProphetsData = [\r\n   {\r\n      prophetId: 1,\r\n      image:\r\n         \"https://img.ltn.com.tw/Upload/partner/page/2019/08/23/190823-4626-01-geReG.jpg\",\r\n      name: \"Corgi\",\r\n      score: 9.9,\r\n      numPrediction: 99,\r\n      description:\r\n         \"one hundred fifty characters one hundred fifty characters one hundred fifty characters one hundred fifty characters one hundred fifty characters one h\",\r\n   },\r\n   {\r\n      prophetId: 2,\r\n      image:\r\n         \"https://smallcaps.com.au/wp-content/uploads/2020/05/Warren-Buffett-teaching-valuable-lessons-COVID-19-airline-stocks-sell-business-investment.jpg\",\r\n      name: \"Warren Buffett\",\r\n      score: 9.3,\r\n      numPrediction: 3,\r\n      description:\r\n         \"American investor, business tycoon, philanthropist, one of the most successful investors in the world, the world's seventh-wealthiest person.\",\r\n   },\r\n   {\r\n      prophetId: 3,\r\n      image:\r\n         \"https://thumbor.forbes.com/thumbor/fit-in/416x416/filters%3Aformat%28jpg%29/https%3A%2F%2Fspecials-images.forbesimg.com%2Fimageserve%2F5f4ebe0c87612dab4f12a597%2F0x0.jpg%3Fbackground%3D000000%26cropX1%3D292%26cropX2%3D3684%26cropY1%3D592%26cropY2%3D3987\",\r\n      name: \"Bill Gates\",\r\n      score: 8.3,\r\n      numPrediction: 300,\r\n      description:\r\n         \"American business magnate, software developer, investor, and philanthropist. He is best known as the co-founder of Microsoft Corporation.\",\r\n   },\r\n   {\r\n      prophetId: 4,\r\n      image:\r\n         \"https://image.cnbcfm.com/api/v1/image/104225995-_95A5004.jpg?v=1540458420\",\r\n      name: \"Jack Ma\",\r\n      score: 8.6,\r\n      numPrediction: 66,\r\n      description:\r\n         \"Chinese business magnate, investor and philanthropist. He is the co-founder and former executive chairman of Alibaba Group, a multinational conglomerate.\",\r\n   },\r\n]\r\n\r\nconst mockPredictionsData = [\r\n   {\r\n      predictionId: 1,\r\n      prophetId: 2,\r\n      image:\r\n         \"https://g.foolcdn.com/image/?url=https%3A//g.foolcdn.com/editorial/images/468321/fool-not-getty-warren-buffett.jpg&w=2000&op=resize\",\r\n      title: \"Warren Buffett Just Won a $1 Million Bet\",\r\n      description:\r\n         \"In 2007, Warren Buffett bet a million dollars that an index fund would outperform a collection of hedge funds over the course of 10 years. This week he won that bet, but the big winner in the wager is a charity called Girls Inc.\",\r\n      score: 10,\r\n      numReviews: 66,\r\n      anncouncedDate: \"2007\",\r\n      resultRevealDate: \"2017-12-30\",\r\n      status: \"Result Revealed\",\r\n   },\r\n   {\r\n      predictionId: 2,\r\n      prophetId: 3,\r\n      image:\r\n         \"https://www.plantbasednews.org/.image/c_limit%2Ccs_srgb%2Cq_auto:good%2Cw_700/MTcxMzM4MzM3MTEyNTY1NzQy/coronavirusbillgates.webp\",\r\n      title: \"TED 2015: Bill Gates warns on future disease epidemic\",\r\n      description:\r\n         \"The world needs to prepare for the next major health crisis, Bill Gates has told delegates at the Ted (Technology, Entertainment and Design) conference.\",\r\n      score: 8.6,\r\n      numReviews: 888,\r\n      anncouncedDate: \"2015-03-19\",\r\n      resultRevealDate: \"2020-01-24\",\r\n      status: \"Result Revealed\",\r\n   },\r\n   {\r\n      predictionId: 3,\r\n      prophetId: 4,\r\n      image: \"https://images.indianexpress.com/2018/09/jack-ma.jpg\",\r\n      title:\r\n         \"Jack Ma, once proponent of 12-hour workdays, now foresees 12-hour workweeks\",\r\n      description:\r\n         \"In the next 20 to 30 years, human beings will live much longer. Life science technology is going to make people live probably 100 or 120 years,” he said. The world wouldn’t need a lot of jobs.\",\r\n      score: 0,\r\n      numReviews: 0,\r\n      anncouncedDate: \"2019-08-29\",\r\n      resultRevealDate: \"2039-08-29\",\r\n      status: \"Ongoing\",\r\n   },\r\n   {\r\n      predictionId: 4,\r\n      prophetId: 2,\r\n      image: \"https://i.insider.com/5f3fd15f89aff80028ab7167?format=jpeg\",\r\n      title: \"Warren Buffett to invest $5 billion in Bank of America\",\r\n      description:\r\n         \"\\\"I am impressed with the profit-generating abilities of this franchise, and that they are acting aggressively to put their challenges behind them. Bank of America is focused on their customers and on serving them well. That is what customers want, and that's the company's strategy.\\\" Warren Buffett said in a press release.\",\r\n      score: 7.8,\r\n      numReviews: 1,\r\n      anncouncedDate: \"2011-08-25\",\r\n      resultRevealDate: \"Unknown\",\r\n      status: \"Ongoing\",\r\n   },\r\n]\r\n\r\nexport { mockProphetsData, mockPredictionsData }\r\n","import React, { useRef, useEffect, useState } from \"react\"\r\nimport \"./TopProphet.css\"\r\nimport ProphetCard from \"../../../lib/components/ProphetCard/ProphetCard\"\r\n//Antd\r\nimport { Carousel } from \"antd\"\r\n//Icons\r\nimport { GoChevronRight, GoChevronLeft } from \"react-icons/go\"\r\n//Button\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { mockProphetsData } from \"../../../lib/mockData\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\n\r\n//Antd Carousel Settings\r\nconst settings = {\r\n   arrows: false,\r\n   dots: {className: \"ProphetsDots\"},\r\n   infinite: true,\r\n   speed: 600,\r\n   slidesToShow: 6,\r\n   slidesToScroll: 6,\r\n   initialSlide: 0,\r\n   draggable: true,\r\n   responsive: [\r\n      {\r\n         breakpoint: 2160,\r\n         settings: {\r\n            slidesToShow: 5,\r\n            slidesToScroll: 5,\r\n         },\r\n      },\r\n      {\r\n         breakpoint: 1800,\r\n         settings: {\r\n            slidesToShow: 4,\r\n            slidesToScroll: 4,\r\n         },\r\n      },\r\n      {\r\n         breakpoint: 1430,\r\n         settings: {\r\n            slidesToShow: 3,\r\n            slidesToScroll: 3,\r\n         },\r\n      },\r\n      {\r\n         breakpoint: 1100,\r\n         settings: {\r\n            slidesToShow: 2,\r\n            slidesToScroll: 2,\r\n         },\r\n      },\r\n      {\r\n         breakpoint: 715,\r\n         settings: {\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1,\r\n         },\r\n      },\r\n   ],\r\n}\r\n\r\nfunction TopProphets(props) {\r\n   const carouselRef = useRef()\r\n\r\n   function CarouselNext() {\r\n      carouselRef.current.next()\r\n   }\r\n   function CarouselPrev() {\r\n      carouselRef.current.prev()\r\n   }\r\n\r\n   const [mockProphetList, setMockProphetList] = useState([])\r\n\r\n   useEffect(() => {\r\n      createData()\r\n   }, [])\r\n\r\n   const createData = () => {\r\n      let prophetData = []\r\n      for (let i = 0; i < 3; i++) {\r\n         prophetData = prophetData.concat(mockProphetsData)\r\n      }\r\n      setMockProphetList(prophetData)\r\n   }\r\n\r\n   return (\r\n      <div className=\"TopProphets\">\r\n         <div className=\"TitleAndButtons\">\r\n            <h2>Top Prophets</h2>\r\n            <div className=\"TitleButtons\">\r\n               <Button onClick={CarouselPrev} variant=\"outlined\">\r\n                  <GoChevronLeft color=\"white\" size=\"1.8em\" />\r\n               </Button>\r\n               <Button onClick={CarouselNext} variant=\"outlined\">\r\n                  <GoChevronRight color=\"white\" size=\"1.8em\" />\r\n               </Button>\r\n               <Link to=\"/prophets\">\r\n                  <Button variant=\"outlined\">SHOW ALL</Button>\r\n               </Link>\r\n            </div>\r\n         </div>\r\n\r\n         <div className=\"ProphetsList\">\r\n            <Carousel ref={carouselRef} {...settings}>\r\n               {mockProphetList.map((data, index) => {\r\n                  return (\r\n                     <div key={index} className=\"ProphetCardContainer\">\r\n                        <ProphetCard data={data} />\r\n                     </div>\r\n                  )\r\n               })}\r\n            </Carousel>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default TopProphets\r\n","import React from \"react\"\r\nimport \"./PredictionCard.css\"\r\nimport Rating from \"@material-ui/lab/Rating\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nfunction PredictionCard({data}) {\r\n   return (\r\n      <Link\r\n         className=\"PredictionCard\"\r\n         to={`/predictionDetail/${data.predictionId}`}\r\n      >\r\n         <img src={data.image} alt=\"PredictionImg\" />\r\n         <div className=\"NotImg\">\r\n            <div className=\"Text\">\r\n               <p className=\"Status\">Status: {data.status}</p>\r\n               <p className=\"Title\">{data.title}</p>\r\n               <p className=\"Description\">{data.description}</p>\r\n            </div>\r\n            <div className=\"Ratings\">\r\n               <div className=\"PredictionInfo\">\r\n                  <div className=\"PredictionScore\">\r\n                     <p className=\"PredictionScoreNumber\">\r\n                        <span>{data.score}</span>/10\r\n                     </p>\r\n                     <Rating\r\n                        name=\"half-rating-read\"\r\n                        defaultValue={data.score / 2}\r\n                        precision={0.1}\r\n                        size=\"small\"\r\n                        readOnly\r\n                     />\r\n                     <p className=\"TextPredictionScore\">Prediction Score</p>\r\n                  </div>\r\n                  <hr />\r\n                  <div className=\"NumReviews\">\r\n                     <div className=\"Number\">\r\n                        <span>{data.numReviews}</span>\r\n                     </div>\r\n                     <p className=\"TextReviews\">Reviews</p>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </Link>\r\n   )\r\n}\r\n\r\nexport default PredictionCard\r\n","import React, { useEffect, useState } from \"react\"\r\nimport \"./TopPrediction.css\"\r\nimport PredictionCard from \"../../../lib/components/PredictionCard/PredictionCard\"\r\n//Button\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { Spin } from \"antd\"\r\nimport { mockPredictionsData } from \"../../../lib/mockData\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport const TopPredictions = (props) => {\r\n   const [mockPredictionList, setMockPredictionList] = useState([])\r\n\r\n   const [showLoading, setShowLoading] = useState(false)\r\n\r\n   useEffect(() => {\r\n      createData()\r\n   }, [])\r\n\r\n   const createData = () => {\r\n      let predictionData = []\r\n      for (let i = 0; i < 1; i++) {\r\n         predictionData = predictionData.concat(mockPredictionsData)\r\n      }\r\n      setMockPredictionList(predictionData)\r\n   }\r\n\r\n   const showMore = () => {\r\n      setShowLoading(true)\r\n      let temp = mockPredictionList.concat(mockPredictionsData)\r\n      setTimeout(() => {\r\n         setMockPredictionList(temp)\r\n         setShowLoading(false)\r\n      }, 1000)\r\n   }\r\n\r\n   const showLoadingOrButton = () => {\r\n      if (showLoading) {\r\n         return <Spin size=\"large\" />\r\n      } else {\r\n         return (\r\n            <Button onClick={showMore} variant=\"outlined\">\r\n               SHOW MORE\r\n            </Button>\r\n         )\r\n      }\r\n   }\r\n\r\n   return (\r\n      <div className=\"TopPredictions\">\r\n         <div className=\"TitleAndButtons\">\r\n            <h2>Top Predictions</h2>\r\n            <div className=\"TitleButtons\">\r\n               <Link to=\"/predictions\">\r\n                  <Button variant=\"outlined\">SHOW ALL</Button>\r\n               </Link>\r\n            </div>\r\n         </div>\r\n         <div className=\"PredictionsList\">\r\n            {mockPredictionList.map((data, index) => {\r\n               return <PredictionCard key={index} data={data} />\r\n            })}\r\n         </div>\r\n         <div className=\"TitleButtons\">{showLoadingOrButton()}</div>\r\n      </div>\r\n   )\r\n}\r\n\r\n","import React from \"react\"\r\nimport Cover from \"./Cover/Cover\"\r\nimport TopProphets from \"./TopProphet/TopProphet\"\r\nimport { TopPredictions } from \"./TopPrediction/TopPrediction\"\r\nimport \"./Home.css\"\r\n\r\nexport const Home = () => {\r\n   return (\r\n      <div className=\"Home\">\r\n         <Cover />\r\n         <TopProphets />\r\n         <TopPredictions />\r\n      </div>\r\n   )\r\n}\r\n","import React, { useState, useEffect } from \"react\"\r\nimport \"./Search.css\"\r\nimport { IoMdArrowRoundBack } from \"react-icons/io\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { mockProphetsData } from \"../../lib/mockData\"\r\nimport { mockPredictionsData } from \"../../lib/mockData\"\r\nimport ProphetCard from \"../../lib/components/ProphetCard/ProphetCard\"\r\nimport PredictionCard from \"../../lib/components/PredictionCard/PredictionCard\"\r\nimport { useHistory } from \"react-router-dom\"\r\n\r\nexport const Search = (props) => {\r\n   const [showProphets, setShowProphets] = useState(props.showProphets)\r\n\r\n   const [showPredictions, setShowPredictions] = useState(props.showPredictions)\r\n\r\n   const [mockProphetList, setMockProphetList] = useState([])\r\n\r\n   const [mockPredictionList, setMockPredictionList] = useState([])\r\n\r\n   const [inputText, setInputText] = useState(false)\r\n\r\n   //Fetch Prophets\r\n   const createProphetData = () => {\r\n      let prophetData = []\r\n      for (let i = 0; i < 1; i++) {\r\n         prophetData = prophetData.concat(mockProphetsData)\r\n      }\r\n      setMockProphetList(prophetData)\r\n   }\r\n\r\n   //Fetch Predictions\r\n   const createPredictionData = () => {\r\n      let predictionData = []\r\n      for (let i = 0; i < 1; i++) {\r\n         predictionData = predictionData.concat(mockPredictionsData)\r\n      }\r\n      setMockPredictionList(predictionData)\r\n   }\r\n\r\n   const createSearchProphetData = (input) => {\r\n      let prophetData = []\r\n      mockProphetsData.forEach((data) => {\r\n         if (data.name && data.name.toLocaleLowerCase().includes(input.toLocaleLowerCase())) {\r\n            prophetData.push(data)\r\n         }\r\n      })\r\n      setMockProphetList(prophetData)\r\n   }\r\n\r\n   const createSearchPredictionData = (input) => {\r\n      let predictionData = []\r\n      mockPredictionsData.forEach((data) => {\r\n         if (data.title && data.title.toLocaleLowerCase().includes(input.toLocaleLowerCase())) {\r\n            predictionData.push(data)\r\n         }\r\n      })\r\n      setMockPredictionList(predictionData)\r\n   }\r\n\r\n   //Scroll to top when jump\r\n   useEffect(() => {\r\n      window.scrollTo(0, 0)\r\n   }, [])\r\n\r\n   useEffect(() => {\r\n      setShowProphets(props.showProphets)\r\n      setShowPredictions(props.showPredictions)\r\n      if (props.match.match.params.input) {\r\n         const input = props.match.match.params.input\r\n         createSearchProphetData(input)\r\n         createSearchPredictionData(input)\r\n      } else {\r\n         createProphetData()\r\n         createPredictionData()\r\n      }\r\n      setInputText(props.match.match.params.input)\r\n   }, [\r\n      props.showProphets,\r\n      props.showPredictions,\r\n      props.match.match.params.input,\r\n   ])\r\n\r\n   //BackButton\r\n   const history = useHistory()\r\n\r\n\r\n   //Prophets or Predictions\r\n   const whatToShow = () => {\r\n      if (showProphets) {\r\n         if (Object.keys(mockProphetList).length === 0) {\r\n            return (\r\n               <div className=\"Empty\">No Result Found</div>\r\n            )\r\n         }\r\n            return (\r\n               <div className=\"SearchProphetCards\">\r\n                  {mockProphetList.map((data, index) => {\r\n                     return <ProphetCard key={index} data={data} />\r\n                  })}\r\n               </div>\r\n            )\r\n      }\r\n      if (showPredictions) {\r\n         if (Object.keys(mockPredictionList).length === 0) {\r\n            return <div className=\"Empty\">No Result Found</div>\r\n         }\r\n         return (\r\n            <div className=\"SearchPredictionCards\">\r\n               {mockPredictionList.map((data, index) => {\r\n                  return <PredictionCard key={index} data={data} />\r\n               })}\r\n            </div>\r\n         )\r\n      }\r\n   }\r\n\r\n   const searchTextDisplay = () => {\r\n      if (inputText) {\r\n         return inputText\r\n      }\r\n      if (showProphets) {\r\n         return \"All Prophets\"\r\n      } else {\r\n         return \"All Predictions\"\r\n      }\r\n   }\r\n\r\n   return (\r\n      <div className=\"Search\">\r\n         <div className=\"ResultsAndTools\">\r\n            <div className=\"Results HoverEffect\">\r\n               <div className=\"SearchText\">\r\n                  <div\r\n                     className=\"Icon\"\r\n                     onClick={() => {\r\n                        history.goBack()\r\n                     }}\r\n                  >\r\n                     <IoMdArrowRoundBack size=\"3em\" />\r\n                  </div>\r\n                  <p>Search: {searchTextDisplay()}</p>\r\n               </div>\r\n               <div className=\"SearchButtonContainer\">\r\n                  <div\r\n                     className={\r\n                        showProphets\r\n                           ? \"SearchButton SearchButtonActive\"\r\n                           : \"SearchButton\"\r\n                     }\r\n                     onClick={() => {\r\n                        setShowProphets(true)\r\n                        setShowPredictions(false)\r\n                     }}\r\n                  >\r\n                     <Button>Prophets</Button>\r\n                  </div>\r\n                  <div\r\n                     className={\r\n                        showPredictions\r\n                           ? \"SearchButton SearchButtonActive\"\r\n                           : \"SearchButton\"\r\n                     }\r\n                     onClick={() => {\r\n                        setShowProphets(false)\r\n                        setShowPredictions(true)\r\n                     }}\r\n                  >\r\n                     <Button>Predictions</Button>\r\n                  </div>\r\n               </div>\r\n               {whatToShow()}\r\n               <div className=\"Empty\"></div>\r\n            </div>\r\n\r\n            <div className=\"Tools\">\r\n               <div className=\"Sort HoverEffect\">\r\n                  <p className=\"Title\">Sort</p>\r\n               </div>\r\n               <div className=\"Filter HoverEffect\">\r\n                  <p className=\"Title\">Filter</p>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nSearch.defaultProps = {\r\n   match: { match: { params: { input: false } } },\r\n}\r\n","import React from \"react\"\r\nimport \"./PredictionStrip.css\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport const PredictionStrip = (props) => {\r\n   return (\r\n      <Link\r\n         className=\"PredictionStrip\"\r\n         to={`/predictionDetail/${props.data.predictionId}`}\r\n      >\r\n         <div className=\"Text\">\r\n            <p className=\"Status\">Status:{props.data.status}</p>\r\n            <p className=\"Title\">{props.data.title}</p>\r\n            <p className=\"Description\">{props.data.description}</p>\r\n         </div>\r\n         <div className=\"Rating\">\r\n            <p className=\"Number\">\r\n               <span>{props.data.score}</span>/10\r\n            </p>\r\n            <p>Prediction Score</p>\r\n         </div>\r\n      </Link>\r\n   )\r\n}\r\n","import React, { useEffect } from \"react\"\r\nimport \"./ProphetDetail.css\"\r\nimport ProphetCard from \"../../lib/components/ProphetCard/ProphetCard\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { PredictionStrip } from \"./PredictionStrip/PredictionStrip\"\r\n\r\nconst prophetData = [\r\n   {\r\n      prophetId: 1,\r\n      image:\r\n         \"https://img.ltn.com.tw/Upload/partner/page/2019/08/23/190823-4626-01-geReG.jpg\",\r\n      name: \"Corgi\",\r\n      score: 9.9,\r\n      numPrediction: 99,\r\n      description:\r\n         \"one hundred fifty characters one hundred fifty characters one hundred fifty characters one hundred fifty characters one hundred fifty characters one h\",\r\n      moreInfo: \"\",\r\n   },\r\n]\r\n\r\nconst predictionData = {\r\n   predictionId: 1,\r\n   prophetId: 2,\r\n   image:\r\n      \"https://g.foolcdn.com/image/?url=https%3A//g.foolcdn.com/editorial/images/468321/fool-not-getty-warren-buffett.jpg&w=2000&op=resize\",\r\n   title: \"Warren Buffett Just Won a $1 Million Bet\",\r\n   description:\r\n      \"In 2007, Warren Buffett bet a million dollars that an index fund would outperform a collection of hedge funds over the course of 10 years. This week he won that bet, but the big winner in the wager is a charity called Girls Inc.\",\r\n   score: 10,\r\n   numReviews: 66,\r\n   anncouncedDate: \"2007\",\r\n   resultRevealDate: \"2017-12-30\",\r\n   status: \"Result Revealed\",\r\n}\r\n\r\nexport const ProphetDetail = (props) => {\r\n   useEffect(() => {\r\n      window.scrollTo(0, 0)\r\n   }, [])\r\n   return (\r\n      <div className=\"Detail\">\r\n         <div className=\"Content\">\r\n            <div className=\"Section\">\r\n               <div className=\"SectionTitleAndButton\">\r\n                  <h2>Prophet Information</h2>\r\n               </div>\r\n               <ProphetCard data={prophetData[0]} />\r\n               <a href={`https://en.wikipedia.org/wiki/${prophetData[0].name}`}>\r\n                  <Button variant=\"outlined\">More Info</Button>\r\n               </a>\r\n            </div>\r\n            <div className=\"Section\">\r\n               <div className=\"SectionTitleAndButton\">\r\n                  <h2>Predictions</h2>\r\n               </div>\r\n               <div className=\"PredictionList\">\r\n                  <PredictionStrip data={predictionData} />\r\n                  <PredictionStrip data={predictionData} />\r\n                  <PredictionStrip data={predictionData} />\r\n               </div>\r\n               <Button variant=\"outlined\">SHOW MORE</Button>\r\n            </div>\r\n            <div className=\"Section\">\r\n               <div className=\"SectionTitleAndButton\">\r\n                  <h2>Comments</h2>\r\n                  <a href={`/`}>\r\n                     <Button variant=\"outlined\">Comment</Button>\r\n                  </a>\r\n               </div>\r\n               <Button variant=\"outlined\">SHOW MORE</Button>\r\n            </div>\r\n         </div>\r\n         {props.match.match.params.id}\r\n      </div>\r\n   )\r\n}\r\n","import React, { useEffect } from \"react\"\r\nimport \"./PredictionDetail.css\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport PredictionCard from \"../../lib/components/PredictionCard/PredictionCard\"\r\n\r\nconst predictionData = [{\r\n   predictionId: 1,\r\n   prophetId: 2,\r\n   image:\r\n      \"https://g.foolcdn.com/image/?url=https%3A//g.foolcdn.com/editorial/images/468321/fool-not-getty-warren-buffett.jpg&w=2000&op=resize\",\r\n   title: \"Warren Buffett Just Won a $1 Million Bet\",\r\n   description:\r\n      \"In 2007, Warren Buffett bet a million dollars that an index fund would outperform a collection of hedge funds over the course of 10 years. This week he won that bet, but the big winner in the wager is a charity called Girls Inc.\",\r\n   score: 10,\r\n   numReviews: 66,\r\n   anncouncedDate: \"2007\",\r\n   resultRevealDate: \"2017-12-30\",\r\n   status: \"Result Revealed\",\r\n}]\r\n\r\nexport const PredictionDetail = (props) => {\r\n   useEffect(() => {\r\n      window.scrollTo(0, 0)\r\n   }, [])\r\n   return (\r\n      <div className=\"Detail\">\r\n         <div className=\"Content\">\r\n            <div className=\"Section\">\r\n               <div className=\"SectionTitleAndButton\">\r\n                  <h2>Prediction Information</h2>\r\n               </div>\r\n               <PredictionCard data={predictionData[0]} />\r\n               <div className=\"Buttons\">\r\n                  <a href={`/`}>\r\n                     <Button variant=\"outlined\">Show Prophet</Button>\r\n                  </a>\r\n                  <a href={`https://en.wikipedia.org/wiki/`}>\r\n                     <Button variant=\"outlined\">View Article</Button>\r\n                  </a>\r\n               </div>\r\n            </div>\r\n            <div className=\"Section\">\r\n               <div className=\"SectionTitleAndButton\">\r\n                  <h2>Ratings</h2>\r\n                  <a href={`/`}>\r\n                     <Button variant=\"outlined\">Rate This Prediction</Button>\r\n                  </a>\r\n               </div>\r\n               <Button variant=\"outlined\">SHOW MORE</Button>\r\n            </div>\r\n         </div>\r\n         {console.log(props.match.match.params.id)}\r\n      </div>\r\n   )\r\n}\r\n","import React, { useState, useEffect } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport \"./lib/common.css\"\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport { Navbar } from \"./lib/components/Navbar/Navbar\"\nimport { Home } from \"./pages/Home/Home\"\nimport { Search } from \"./pages/Search/Search\"\nimport { ProphetDetail } from \"./pages/ProphetDetail/ProphetDetail\"\nimport { PredictionDetail } from \"./pages/PredictionDetail/PredictionDetail\"\nimport { Spin } from \"antd\"\nimport axios from \"axios\"\n\nfunction App() {\n   const [showLoading, setShowLoading] = useState(false)\n   const [testImg, setTestImg] = useState(\"\")\n\n   const loadingTrue = () => {\n      setShowLoading(true)\n   }\n\n   const loadingFalse = () => {\n      setTimeout(() => {\n         setShowLoading(false)\n      }, 1000)\n   }\n\n   useEffect(() => {\n      axios.get(\"/test123\").then((response) => {\n         console.log(response.data[0].img)\n         setTestImg(response.data[0].img)\n      })\n   }, [])\n\n   return (\n      <Router>\n         <div className=\"App\">\n            <Navbar loadingTrue={loadingTrue} loadingFalse={loadingFalse} />\n            <Spin size=\"large\" spinning={showLoading}>\n               <Switch>\n                  <Route\n                     path=\"/prophetDetail/:id\"\n                     render={(match) => <ProphetDetail match={match} />}\n                  />\n                  <Route\n                     path=\"/predictionDetail/:id\"\n                     render={(match) => <PredictionDetail match={match} />}\n                  />\n                  <Route\n                     path=\"/prophets\"\n                     exact\n                     render={() => (\n                        <Search showProphets={true} showPredictions={false} />\n                     )}\n                  />\n                  <Route\n                     path=\"/predictions\"\n                     exact\n                     render={() => (\n                        <Search showProphets={false} showPredictions={true} />\n                     )}\n                  />\n                  <Route\n                     path=\"/search/:input\"\n                     render={(match) => (\n                        <Search\n                           showProphets={true}\n                           showPredictions={false}\n                           match={match}\n                        />\n                     )}\n                  />\n                  <Route\n                     path=\"/testImg123\"\n                     render={() => (\n                        <div>\n                           <img src={testImg} alt=\"testImg\" />\n                        </div>\n                     )}\n                  />\n                  <Route path=\"/\" component={Home} />\n               </Switch>\n            </Spin>\n         </div>\n      </Router>\n   )\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}