{"version":3,"sources":["lib/components/Navbar/Navbar.js","pages/Home/Cover/Cover.js","lib/components/ProphetCard/ProphetCard.js","pages/Home/TopProphet/TopProphet.js","lib/components/PredictionCard/PredictionCard.js","pages/Home/TopPrediction/TopPrediction.js","pages/Home/Home.js","pages/NotFound/NotFound.js","pages/Search/Search.js","pages/ProphetDetail/PredictionStrip/PredictionStrip.js","pages/ProphetDetail/ProphetDetail.js","pages/PredictionDetail/PredictionDetail.js","index.js"],"names":["Navbar","setShowLoading","history","useHistory","useState","scroll","setScroll","window","addEventListener","scrollY","showBurger","setShowBurger","useLayoutEffect","updateSize","innerWidth","removeEventListener","handleBurgerClick","crossButton","document","getElementsByClassName","lastChild","click","console","log","inputText","setInputText","handleSearch","push","SearchBar","className","id","placeholder","onChange","e","target","value","onPressEnter","onClick","size","mockLoading","setTimeout","to","Cover","color","ProphetCard","data","prophet_id","src","image","alt","name","description","score","Rating","defaultValue","precision","readOnly","num_prediction","settings","arrows","dots","infinite","speed","slidesToShow","slidesToScroll","initialSlide","draggable","responsive","breakpoint","TopProphets","carouselRef","useRef","prophetList","setProphetList","useEffect","getData","a","prophetData","axios","get","then","response","status","result","i","concat","catch","err","Button","current","prev","variant","next","ref","map","index","key","PredictionCard","prediction_id","title","num_review","TopPredictions","props","predictionList","setPredictionList","showLoading","predictionData","showMore","temp","Home","NotFound","Search","showProphets","setShowProphets","showPredictions","setShowPredictions","setProphetData","setPredictionData","getProphetData","keyWord","getPredictionData","scrollTo","match","params","input","goBack","spinning","Object","keys","length","defaultProps","PredictionStrip","predictionId","prophetId","numPrediction","moreInfo","numReviews","anncouncedDate","resultRevealDate","ProphetDetail","href","PredictionDetail","App","testImg","setTestImg","img","path","render","exact","component","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.1283d02f.chunk.js","sourcesContent":["import React, { useState, useLayoutEffect } from \"react\"\r\nimport \"./Navbar.css\"\r\nimport { Link, useHistory } from \"react-router-dom\"\r\nimport { GoSearch } from \"react-icons/go\"\r\nimport { Input } from \"antd\"\r\nimport { slide as Menu } from \"react-burger-menu\"\r\n\r\nexport const Navbar = ({ setShowLoading }) => {\r\n   const history = useHistory()\r\n\r\n   //Chaneg NavBar Background\r\n   const [scroll, setScroll] = useState(false)\r\n   const changeBackground = () => {\r\n      if (window.scrollY >= 100) {\r\n         setScroll(true)\r\n      } else {\r\n         setScroll(false)\r\n      }\r\n   }\r\n   window.addEventListener(\"scroll\", changeBackground)\r\n\r\n   //Hamburger Responsive\r\n   const [showBurger, setShowBurger] = useState(false)\r\n\r\n   useLayoutEffect(() => {\r\n      const updateSize = () => {\r\n         // console.log([window.innerWidth, window.innerHeight])\r\n         if (window.innerWidth <= 768) setShowBurger(true)\r\n         else setShowBurger(false)\r\n      }\r\n      window.addEventListener(\"resize\", updateSize)\r\n      updateSize()\r\n      return () => window.removeEventListener(\"resize\", updateSize)\r\n   }, [])\r\n\r\n   //Close Nav Burger\r\n   const handleBurgerClick = () => {\r\n      let crossButton = document.getElementsByClassName(\"bm-cross-button\")[0]\r\n      if (crossButton) crossButton.lastChild.click()\r\n      else console.log(\"Cannot find CrossButton\")\r\n   }\r\n\r\n   //Search Input\r\n   const [inputText, setInputText] = useState(\"\")\r\n\r\n   const handleSearch = () => {\r\n      history.push(`/search/${inputText}`)\r\n      setInputText(\"\")\r\n   }\r\n\r\n   const SearchBar = () => {\r\n      return (\r\n         <div className=\"SearchBarContainer\">\r\n            <div className=\"SearchBar\">\r\n               <Input\r\n                  id=\"SearchInput\"\r\n                  placeholder=\"Search...\"\r\n                  onChange={(e) => setInputText(e.target.value)}\r\n                  onPressEnter={() => handleSearch()}\r\n                  value={inputText}\r\n               />\r\n               <div className=\"Icon\" onClick={() => handleSearch()}>\r\n                  <GoSearch size=\"1.2rem\" />\r\n               </div>\r\n            </div>\r\n         </div>\r\n      )\r\n   }\r\n\r\n   const Burger = () => {\r\n      return (\r\n         <div className=\"Burger\">\r\n            <Menu>\r\n               <ul>\r\n                  <Link to=\"/\" onClick={handleBurgerClick}>\r\n                     <li>The Prohets</li>\r\n                  </Link>\r\n                  <Link to=\"/prophets\" onClick={handleBurgerClick}>\r\n                     <li>Prohets</li>\r\n                  </Link>\r\n                  <Link to=\"/predictions\" onClick={handleBurgerClick}>\r\n                     <li>Predictions</li>\r\n                  </Link>\r\n                  <Link to=\"\" onClick={handleBurgerClick}>\r\n                     <li>Sign In</li>\r\n                  </Link>\r\n                  <Link to=\"\" onClick={handleBurgerClick}>\r\n                     <li>Login</li>\r\n                  </Link>\r\n               </ul>\r\n            </Menu>\r\n         </div>\r\n      )\r\n   }\r\n\r\n   const mockLoading = () => {\r\n      setShowLoading(true)\r\n      setTimeout(() => {\r\n         setShowLoading(false)\r\n      }, 1000)\r\n   }\r\n\r\n   const NavLeft = () => {\r\n      return (\r\n         <ul className=\"NavLeft\">\r\n            <Link to=\"/\" onClick={mockLoading}>\r\n               <li>Home</li>\r\n            </Link>\r\n            <Link to=\"/prophets\" onClick={mockLoading}>\r\n               <li>Prohets</li>\r\n            </Link>\r\n            <Link to=\"/predictions\">\r\n               <li>Predictions</li>\r\n            </Link>\r\n         </ul>\r\n      )\r\n   }\r\n\r\n   const NavRight = () => {\r\n      return (\r\n         <ul className=\"NavRight\">\r\n            <Link to=\"/test\">\r\n               <li>Sign In</li>\r\n            </Link>\r\n            <Link to=\"\">\r\n               <li>Login</li>\r\n            </Link>\r\n         </ul>\r\n      )\r\n   }\r\n\r\n   if (showBurger) {\r\n      return (\r\n         <div className={scroll ? \"Navbar NavbarActive\" : \"Navbar\"}>\r\n            {Burger()}\r\n            {SearchBar()}\r\n         </div>\r\n      )\r\n   } else {\r\n      return (\r\n         <div className={scroll ? \"Navbar NavbarActive\" : \"Navbar\"}>\r\n            {NavLeft()}\r\n            {SearchBar()}\r\n            {NavRight()}\r\n         </div>\r\n      )\r\n   }\r\n}\r\n","import React from \"react\"\r\nimport \"./Cover.css\"\r\n//icon\r\nimport { VscFoldDown } from \"react-icons/vsc\"\r\n\r\nfunction Cover() {\r\n   return (\r\n      <div className=\"Cover\">\r\n         <div className=\"CoverText\">\r\n            <h1 className=\"TextHover\">Find The Prohets</h1>\r\n            <p className=\"TextHover\">\r\n               Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris\r\n               ultrices finibus urna, ac tempus nunc ornare sed. Donec bibendum\r\n               ante a sollicitudin malesuada. Suspendisse aliquet tellus nisl,\r\n               in facilisis metus ullamcorper eget. In non est ut orci faucibus\r\n               rutrum eu nec odio. Cras finibus eleifend.\r\n            </p>\r\n         </div>\r\n         <div className=\"Icon\">\r\n            <VscFoldDown color=\"white\" size=\"1.8em\" />\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nexport default Cover\r\n","import React from \"react\"\r\nimport \"./ProphetCard.css\"\r\nimport Rating from \"@material-ui/lab/Rating\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nfunction ProphetCard({data}) {\r\n   if (data) {\r\n      return (\r\n         <Link\r\n            className=\"ProphetCard\"\r\n            to={`/prophetDetail/${data.prophet_id}`}\r\n         >\r\n            <img src={data.image} alt=\"profile\" />\r\n            <div className=\"NotImg\">\r\n               <div className=\"TextSection\">\r\n                  <h4 id=\"name\">{data.name}</h4>\r\n                  <p id=\"description\">{data.description}</p>\r\n               </div>\r\n               <div className=\"NumberSection\">\r\n                  <div className=\"Score\">\r\n                     <p className=\"ScoreNumber\">\r\n                        <span>{data.score}</span>/10\r\n                     </p>\r\n                     <Rating\r\n                        name=\"half-rating-read\"\r\n                        defaultValue={\r\n                           data.score ? data.score / 2 : 0\r\n                        }\r\n                        precision={0.1}\r\n                        size=\"small\"\r\n                        readOnly\r\n                     />\r\n                     <p>Prophet Score</p>\r\n                  </div>\r\n                  <hr />\r\n                  <div className=\"NumPredictions\">\r\n                     <span>{data.num_prediction}</span>\r\n                     <p>Predictions</p>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </Link>\r\n      )\r\n   } else {\r\n      return \"\"\r\n   }\r\n}\r\n\r\nexport default ProphetCard\r\n","import React, { useRef, useEffect, useState } from \"react\"\r\nimport \"./TopProphet.css\"\r\nimport ProphetCard from \"../../../lib/components/ProphetCard/ProphetCard\"\r\n//Antd\r\nimport { Carousel } from \"antd\"\r\n//Icons\r\nimport { GoChevronRight, GoChevronLeft } from \"react-icons/go\"\r\n//Button\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { Link } from \"react-router-dom\"\r\nimport axios from \"axios\"\r\n\r\n//Antd Carousel Settings\r\nconst settings = {\r\n   arrows: false,\r\n   dots: { className: \"ProphetsDots\" },\r\n   infinite: true,\r\n   speed: 600,\r\n   slidesToShow: 6,\r\n   slidesToScroll: 6,\r\n   initialSlide: 0,\r\n   draggable: true,\r\n   responsive: [\r\n      {\r\n         breakpoint: 2160,\r\n         settings: {\r\n            slidesToShow: 5,\r\n            slidesToScroll: 5,\r\n         },\r\n      },\r\n      {\r\n         breakpoint: 1800,\r\n         settings: {\r\n            slidesToShow: 4,\r\n            slidesToScroll: 4,\r\n         },\r\n      },\r\n      {\r\n         breakpoint: 1430,\r\n         settings: {\r\n            slidesToShow: 3,\r\n            slidesToScroll: 3,\r\n         },\r\n      },\r\n      {\r\n         breakpoint: 1100,\r\n         settings: {\r\n            slidesToShow: 2,\r\n            slidesToScroll: 2,\r\n         },\r\n      },\r\n      {\r\n         breakpoint: 715,\r\n         settings: {\r\n            slidesToShow: 1,\r\n            slidesToScroll: 1,\r\n         },\r\n      },\r\n   ],\r\n}\r\n\r\nexport const TopProphets = () => {\r\n   const carouselRef = useRef()\r\n\r\n   function CarouselNext() {\r\n      carouselRef.current.next()\r\n   }\r\n   function CarouselPrev() {\r\n      carouselRef.current.prev()\r\n   }\r\n\r\n   const [prophetList, setProphetList] = useState([])\r\n\r\n   useEffect(() => {\r\n      getData()\r\n   }, [])\r\n\r\n   const getData = async () => {\r\n      let prophetData = []\r\n      await axios\r\n         .get(\"api/search/prophets\")\r\n         .then((response) => {\r\n            // console.log(\"Prophets: \")\r\n            // console.log(response.data)\r\n            if (response.data.status === \"success\") {\r\n               prophetData = response.data.result\r\n               for (let i = 0; i < 2; i++) {\r\n                  prophetData = prophetData.concat(prophetData)\r\n               }\r\n               // console.log(prophetData)\r\n               setProphetList(prophetData)\r\n            } else {\r\n               // console.log(response.data.err)\r\n            }\r\n         })\r\n         .catch((err) => console.log(err))\r\n   }\r\n\r\n   return (\r\n      <div className=\"TopProphets\">\r\n         <div className=\"TitleAndButtons\">\r\n            <h2>Top Prophets</h2>\r\n            <div className=\"TitleButtons\">\r\n               <Button onClick={CarouselPrev} variant=\"outlined\">\r\n                  <GoChevronLeft color=\"white\" size=\"1.8em\" />\r\n               </Button>\r\n               <Button onClick={CarouselNext} variant=\"outlined\">\r\n                  <GoChevronRight color=\"white\" size=\"1.8em\" />\r\n               </Button>\r\n               <Link to=\"/prophets\">\r\n                  <Button variant=\"outlined\">SHOW ALL</Button>\r\n               </Link>\r\n            </div>\r\n         </div>\r\n\r\n         <div className=\"ProphetsList\">\r\n            <Carousel ref={carouselRef} {...settings}>\r\n               {prophetList.map((data, index) => {\r\n                  return (\r\n                     <div key={index} className=\"ProphetCardContainer\">\r\n                        <ProphetCard data={data} />\r\n                     </div>\r\n                  )\r\n               })}\r\n            </Carousel>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n","import React from \"react\"\r\nimport \"./PredictionCard.css\"\r\nimport Rating from \"@material-ui/lab/Rating\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nfunction PredictionCard({data}) {\r\n   return (\r\n      <Link\r\n         className=\"PredictionCard\"\r\n         to={`/predictionDetail/${data.prediction_id}`}\r\n      >\r\n         <img src={data.image} alt=\"PredictionImg\" />\r\n         <div className=\"NotImg\">\r\n            <div className=\"Text\">\r\n               <p className=\"Status\">Status: {data.status}</p>\r\n               <p className=\"Title\">{data.title}</p>\r\n               <p className=\"Description\">{data.description}</p>\r\n            </div>\r\n            <div className=\"Ratings\">\r\n               <div className=\"PredictionInfo\">\r\n                  <div className=\"PredictionScore\">\r\n                     <p className=\"PredictionScoreNumber\">\r\n                        <span>{data.score}</span>/10\r\n                     </p>\r\n                     <Rating\r\n                        name=\"half-rating-read\"\r\n                        defaultValue={data.score / 2}\r\n                        precision={0.1}\r\n                        size=\"small\"\r\n                        readOnly\r\n                     />\r\n                     <p className=\"TextPredictionScore\">Prediction Score</p>\r\n                  </div>\r\n                  <hr />\r\n                  <div className=\"NumReviews\">\r\n                     <div className=\"Number\">\r\n                        <span>{data.num_review}</span>\r\n                     </div>\r\n                     <p className=\"TextReviews\">Reviews</p>\r\n                  </div>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </Link>\r\n   )\r\n}\r\n\r\nexport default PredictionCard\r\n","import React, { useEffect, useState } from \"react\"\r\nimport \"./TopPrediction.css\"\r\nimport PredictionCard from \"../../../lib/components/PredictionCard/PredictionCard\"\r\n//Button\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { Spin } from \"antd\"\r\nimport { Link } from \"react-router-dom\"\r\nimport axios from \"axios\"\r\n\r\nexport const TopPredictions = (props) => {\r\n   const [predictionList, setPredictionList] = useState([])\r\n\r\n   const [showLoading, setShowLoading] = useState(false)\r\n\r\n   useEffect(() => {\r\n      getData()\r\n   }, [])\r\n\r\n   const getData = async () => {\r\n      let predictionData = []\r\n      await axios\r\n         .get(\"api/search/predictions\")\r\n         .then((response) => {\r\n            // console.log(\"Predictions: \")\r\n            // console.log(response.data)\r\n            if (response.data.status === \"success\") {\r\n               predictionData = response.data.result\r\n               for (let i = 0; i < 2; i++) {\r\n                  predictionData = predictionData.concat(predictionData)\r\n               }\r\n               // console.log(predictionData)\r\n               setPredictionList(predictionData)\r\n            } else {\r\n               // console.log(response.data.err)\r\n            }\r\n         })\r\n         .catch((err) => console.log(err))\r\n   }\r\n\r\n   const showMore = () => {\r\n      setShowLoading(true)\r\n      let temp = predictionList.concat(predictionList)\r\n      setTimeout(() => {\r\n         setPredictionList(temp)\r\n         setShowLoading(false)\r\n      }, 1000)\r\n   }\r\n\r\n   const showLoadingOrButton = () => {\r\n      if (showLoading) {\r\n         return <Spin size=\"large\" />\r\n      } else {\r\n         return (\r\n            <Button onClick={showMore} variant=\"outlined\">\r\n               SHOW MORE\r\n            </Button>\r\n         )\r\n      }\r\n   }\r\n\r\n   return (\r\n      <div className=\"TopPredictions\">\r\n         <div className=\"TitleAndButtons\">\r\n            <h2>Top Predictions</h2>\r\n            <div className=\"TitleButtons\">\r\n               <Link to=\"/predictions\">\r\n                  <Button variant=\"outlined\">SHOW ALL</Button>\r\n               </Link>\r\n            </div>\r\n         </div>\r\n         <div className=\"PredictionsList\">\r\n            {predictionList.map((data, index) => {\r\n               return <PredictionCard key={index} data={data} />\r\n            })}\r\n         </div>\r\n         <div className=\"TitleButtons\">{showLoadingOrButton()}</div>\r\n      </div>\r\n   )\r\n}\r\n","import React from \"react\"\r\nimport Cover from \"./Cover/Cover\"\r\nimport { TopProphets } from \"./TopProphet/TopProphet\"\r\nimport { TopPredictions } from \"./TopPrediction/TopPrediction\"\r\nimport \"./Home.css\"\r\n\r\nexport const Home = () => {\r\n   return (\r\n      <div className=\"Home\">\r\n         <Cover />\r\n         <TopProphets />\r\n         <TopPredictions />\r\n      </div>\r\n   )\r\n}\r\n","import React from \"react\"\r\nimport \"./NotFound.css\"\r\n\r\nexport const NotFound = () => {\r\n   return (\r\n      <div className=\"NotFound\">\r\n         <p>Sorry Page Not Found</p>\r\n      </div>\r\n   )\r\n}\r\n","import React, { useState, useEffect } from \"react\"\r\nimport \"./Search.css\"\r\nimport { IoMdArrowRoundBack } from \"react-icons/io\"\r\nimport Button from \"@material-ui/core/Button\"\r\n// import { mockProphetsData } from \"../../lib/mockData\"\r\n// import { mockPredictionsData } from \"../../lib/mockData\"\r\nimport ProphetCard from \"../../lib/components/ProphetCard/ProphetCard\"\r\nimport PredictionCard from \"../../lib/components/PredictionCard/PredictionCard\"\r\nimport { useHistory } from \"react-router-dom\"\r\nimport axios from \"axios\"\r\nimport { Spin } from \"antd\"\r\n\r\nexport const Search = (props) => {\r\n   //Display Prophets or Predictions\r\n   const [showProphets, setShowProphets] = useState(props.showProphets)\r\n   const [showPredictions, setShowPredictions] = useState(props.showPredictions)\r\n\r\n   //All Prophet/Prediction Data From Server\r\n   const [prophetData, setProphetData] = useState([])\r\n   const [predictionData, setPredictionData] = useState([])\r\n\r\n   // //Displayed Prophet/Prediction\r\n   // const [prophetData, setprophetData] = useState([])\r\n   // const [predictionData, setpredictionData] = useState([])\r\n\r\n   const [inputText, setInputText] = useState(\"\")\r\n\r\n   const [showLoading, setShowLoading] = useState(false)\r\n\r\n   //Get Prophet Data From Server\r\n   const getProphetData = async (keyWord) => {\r\n      let prophetData = []\r\n      // console.log(keyWord)\r\n      await axios\r\n         .get(`/api/search/prophets?keyWord=${keyWord}`)\r\n         .then((response) => {\r\n            // console.log(\"Search Prophets: \")\r\n            // console.log(response.data)\r\n            if (response.data.status === \"success\") {\r\n               prophetData = response.data.result\r\n               for (let i = 0; i < 0; i++) {\r\n                  prophetData = prophetData.concat(prophetData)\r\n               }\r\n               // console.log(prophetData)\r\n               setProphetData(prophetData)\r\n            } else {\r\n               // console.log(response.data.err)\r\n            }\r\n         })\r\n         .catch((err) => console.log(err))\r\n   }\r\n\r\n   //Get Prediction Data From Server\r\n   const getPredictionData = async (keyWord) => {\r\n      let predictionData = []\r\n      await axios\r\n         .get(`/api/search/predictions?keyWord=${keyWord}`)\r\n         .then((response) => {\r\n            // console.log(\"Search Predictions: \")\r\n            // console.log(response.data)\r\n            if (response.data.status === \"success\") {\r\n               predictionData = response.data.result\r\n               for (let i = 0; i < 0; i++) {\r\n                  predictionData = predictionData.concat(predictionData)\r\n               }\r\n               // console.log(predictionData)\r\n               setPredictionData(predictionData)\r\n            } else {\r\n               // console.log(response.data.err)\r\n            }\r\n         })\r\n         .catch((err) => console.log(err))\r\n   }\r\n\r\n   // //Locally Search Prophets/Predictions By Input keyword\r\n   // const searchProphetData = useCallback(\r\n   //    (input) => {\r\n   //       let prophetData = []\r\n   //       prophetData.forEach((data) => {\r\n   //          if (\r\n   //             data.name &&\r\n   //             data.name.toLocaleLowerCase().includes(input.toLocaleLowerCase())\r\n   //          ) {\r\n   //             prophetData.push(data)\r\n   //          }\r\n   //       })\r\n   //       setprophetData(prophetData)\r\n   //    },\r\n   //    [prophetData, setprophetData]\r\n   // )\r\n\r\n   // const searchPredictionData = useCallback(\r\n   //    (input) => {\r\n   //       let predictionData = []\r\n   //       predictionData.forEach((data) => {\r\n   //          if (\r\n   //             data.title &&\r\n   //             data.title\r\n   //                .toLocaleLowerCase()\r\n   //                .includes(input.toLocaleLowerCase())\r\n   //          ) {\r\n   //             predictionData.push(data)\r\n   //          }\r\n   //       })\r\n   //       setpredictionData(predictionData)\r\n   //    },\r\n   //    [predictionData, setpredictionData]\r\n   // )\r\n\r\n   useEffect(() => {\r\n      window.scrollTo(0, 0)\r\n   }, [])\r\n\r\n   useEffect(() => {\r\n      setShowProphets(props.showProphets)\r\n      setShowPredictions(props.showPredictions)\r\n\r\n      if (props.match.match.params.input) {\r\n         // console.log(\"222222222222222222222222222222\")\r\n         const keyWord = props.match.match.params.input\r\n         setInputText(keyWord)\r\n         getProphetData(keyWord)\r\n         getPredictionData(keyWord)\r\n         // const keyWord = props.match.match.params.input\r\n         // getProphetData(keyWord)\r\n         // getPredictionData(keyWord)\r\n         // searchProphetData(input)\r\n         // searchPredictionData(input)\r\n      } else {\r\n         // console.log(\"111111111111111111111111111111111\")\r\n         // setprophetData(prophetData)\r\n         // setpredictionData(predictionData)\r\n         getProphetData(\"\")\r\n         getPredictionData(\"\")\r\n      }\r\n   }, [\r\n      props.showProphets,\r\n      props.showPredictions,\r\n      props.match.match.params.input,\r\n      // prophetData,\r\n      // predictionData,\r\n      // searchProphetData,\r\n      // searchPredictionData,\r\n   ])\r\n\r\n   // useEffect(() => {\r\n   //    getProphetData(inputText)\r\n   //    getPredictionData(inputText)\r\n   // }, [inputText])\r\n\r\n   //BackButton\r\n   const history = useHistory()\r\n\r\n   //Prophets or Predictions\r\n   const whatToShow = () => {\r\n      if (showProphets) {\r\n         if (Object.keys(prophetData).length === 0) {\r\n            return <div className=\"Empty\">No Result Found</div>\r\n         }\r\n         return (\r\n            <div className=\"SearchProphetCards\">\r\n               {prophetData.map((data, index) => {\r\n                  return <ProphetCard key={index} data={data} />\r\n               })}\r\n            </div>\r\n         )\r\n      }\r\n      if (showPredictions) {\r\n         if (Object.keys(predictionData).length === 0) {\r\n            return <div className=\"Empty\">No Result Found</div>\r\n         }\r\n         return (\r\n            <div className=\"SearchPredictionCards\">\r\n               {predictionData.map((data, index) => {\r\n                  return <PredictionCard key={index} data={data} />\r\n               })}\r\n            </div>\r\n         )\r\n      }\r\n   }\r\n\r\n   const searchTextDisplay = () => {\r\n      if (inputText) {\r\n         return inputText\r\n      }\r\n      if (showProphets) {\r\n         return \"All Prophets\"\r\n      } else {\r\n         return \"All Predictions\"\r\n      }\r\n   }\r\n\r\n   const mockLoading = () => {\r\n      setShowLoading(true)\r\n      setTimeout(() => {\r\n         setShowLoading(false)\r\n      }, 1000)\r\n   }\r\n\r\n   return (\r\n      <div className=\"Search\">\r\n         <div className=\"ResultsAndTools\">\r\n            <div className=\"Results HoverEffect\">\r\n               <div className=\"SearchText\">\r\n                  <div\r\n                     className=\"Icon\"\r\n                     onClick={() => {\r\n                        history.goBack()\r\n                     }}\r\n                  >\r\n                     <IoMdArrowRoundBack size=\"3em\" />\r\n                  </div>\r\n                  <p>Search: {searchTextDisplay()}</p>\r\n               </div>\r\n               <div className=\"SwitchButtonContainer\">\r\n                  <div\r\n                     className={\r\n                        showProphets\r\n                           ? \"SwitchButton SwitchButtonActive\"\r\n                           : \"SwitchButton\"\r\n                     }\r\n                     onClick={() => {\r\n                        setShowProphets(true)\r\n                        setShowPredictions(false)\r\n                        mockLoading()\r\n                     }}\r\n                  >\r\n                     <Button>Prophets</Button>\r\n                  </div>\r\n                  <div\r\n                     className={\r\n                        showPredictions\r\n                           ? \"SwitchButton SwitchButtonActive\"\r\n                           : \"SwitchButton\"\r\n                     }\r\n                     onClick={() => {\r\n                        setShowProphets(false)\r\n                        setShowPredictions(true)\r\n                        mockLoading()\r\n                     }}\r\n                  >\r\n                     <Button>Predictions</Button>\r\n                  </div>\r\n               </div>\r\n               <Spin size=\"large\" spinning={showLoading}>\r\n                  {showLoading ? <div></div> : whatToShow()}\r\n               </Spin>\r\n            </div>\r\n\r\n            <div className=\"Tools\">\r\n               <div className=\"Sort HoverEffect\">\r\n                  <p className=\"Title\">Sort</p>\r\n               </div>\r\n               <div className=\"Filter HoverEffect\">\r\n                  <p className=\"Title\">Filter</p>\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   )\r\n}\r\n\r\nSearch.defaultProps = {\r\n   match: { match: { params: { input: \"\" } } },\r\n}\r\n","import React from \"react\"\r\nimport \"./PredictionStrip.css\"\r\nimport { Link } from \"react-router-dom\"\r\n\r\nexport const PredictionStrip = (props) => {\r\n   return (\r\n      <Link\r\n         className=\"PredictionStrip\"\r\n         to={`/predictionDetail/${props.data.predictionId}`}\r\n      >\r\n         <div className=\"Text\">\r\n            <p className=\"Status\">Status:{props.data.status}</p>\r\n            <p className=\"Title\">{props.data.title}</p>\r\n            <p className=\"Description\">{props.data.description}</p>\r\n         </div>\r\n         <div className=\"Rating\">\r\n            <p className=\"Number\">\r\n               <span>{props.data.score}</span>/10\r\n            </p>\r\n            <p>Prediction Score</p>\r\n         </div>\r\n      </Link>\r\n   )\r\n}\r\n","import React, { useEffect } from \"react\"\r\nimport \"./ProphetDetail.css\"\r\nimport ProphetCard from \"../../lib/components/ProphetCard/ProphetCard\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport { PredictionStrip } from \"./PredictionStrip/PredictionStrip\"\r\n\r\nconst prophetData = [\r\n   {\r\n      prophetId: 1,\r\n      image:\r\n         \"https://img.ltn.com.tw/Upload/partner/page/2019/08/23/190823-4626-01-geReG.jpg\",\r\n      name: \"Corgi\",\r\n      score: 9.9,\r\n      numPrediction: 99,\r\n      description:\r\n         \"one hundred fifty characters one hundred fifty characters one hundred fifty characters one hundred fifty characters one hundred fifty characters one h\",\r\n      moreInfo: \"\",\r\n   },\r\n]\r\n\r\nconst predictionData = {\r\n   predictionId: 1,\r\n   prophetId: 2,\r\n   image:\r\n      \"https://g.foolcdn.com/image/?url=https%3A//g.foolcdn.com/editorial/images/468321/fool-not-getty-warren-buffett.jpg&w=2000&op=resize\",\r\n   title: \"Warren Buffett Just Won a $1 Million Bet\",\r\n   description:\r\n      \"In 2007, Warren Buffett bet a million dollars that an index fund would outperform a collection of hedge funds over the course of 10 years. This week he won that bet, but the big winner in the wager is a charity called Girls Inc.\",\r\n   score: 10,\r\n   numReviews: 66,\r\n   anncouncedDate: \"2007\",\r\n   resultRevealDate: \"2017-12-30\",\r\n   status: \"Result Revealed\",\r\n}\r\n\r\nexport const ProphetDetail = (props) => {\r\n   useEffect(() => {\r\n      window.scrollTo(0, 0)\r\n   }, [])\r\n   return (\r\n      <div className=\"Detail\">\r\n         <div className=\"Content\">\r\n            <div className=\"Section\">\r\n               <div className=\"SectionTitleAndButton\">\r\n                  <h2>Prophet Information</h2>\r\n               </div>\r\n               <ProphetCard data={prophetData[0]} />\r\n               <a href={`https://en.wikipedia.org/wiki/${prophetData[0].name}`}>\r\n                  <Button variant=\"outlined\">More Info</Button>\r\n               </a>\r\n            </div>\r\n            <div className=\"Section\">\r\n               <div className=\"SectionTitleAndButton\">\r\n                  <h2>Predictions</h2>\r\n               </div>\r\n               <div className=\"PredictionList\">\r\n                  <PredictionStrip data={predictionData} />\r\n                  <PredictionStrip data={predictionData} />\r\n                  <PredictionStrip data={predictionData} />\r\n               </div>\r\n               <Button variant=\"outlined\">SHOW MORE</Button>\r\n            </div>\r\n            <div className=\"Section\">\r\n               <div className=\"SectionTitleAndButton\">\r\n                  <h2>Comments</h2>\r\n                  <a href={`/`}>\r\n                     <Button variant=\"outlined\">Comment</Button>\r\n                  </a>\r\n               </div>\r\n               <Button variant=\"outlined\">SHOW MORE</Button>\r\n            </div>\r\n         </div>\r\n         {props.match.match.params.id}\r\n      </div>\r\n   )\r\n}\r\n","import React, { useEffect } from \"react\"\r\nimport \"./PredictionDetail.css\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport PredictionCard from \"../../lib/components/PredictionCard/PredictionCard\"\r\n\r\nconst predictionData = [{\r\n   predictionId: 1,\r\n   prophetId: 2,\r\n   image:\r\n      \"https://g.foolcdn.com/image/?url=https%3A//g.foolcdn.com/editorial/images/468321/fool-not-getty-warren-buffett.jpg&w=2000&op=resize\",\r\n   title: \"Warren Buffett Just Won a $1 Million Bet\",\r\n   description:\r\n      \"In 2007, Warren Buffett bet a million dollars that an index fund would outperform a collection of hedge funds over the course of 10 years. This week he won that bet, but the big winner in the wager is a charity called Girls Inc.\",\r\n   score: 10,\r\n   numReviews: 66,\r\n   anncouncedDate: \"2007\",\r\n   resultRevealDate: \"2017-12-30\",\r\n   status: \"Result Revealed\",\r\n}]\r\n\r\nexport const PredictionDetail = (props) => {\r\n   useEffect(() => {\r\n      window.scrollTo(0, 0)\r\n   }, [])\r\n   return (\r\n      <div className=\"Detail\">\r\n         <div className=\"Content\">\r\n            <div className=\"Section\">\r\n               <div className=\"SectionTitleAndButton\">\r\n                  <h2>Prediction Information</h2>\r\n               </div>\r\n               <PredictionCard data={predictionData[0]} />\r\n               <div className=\"Buttons\">\r\n                  <a href={`/`}>\r\n                     <Button variant=\"outlined\">Show Prophet</Button>\r\n                  </a>\r\n                  <a href={`https://en.wikipedia.org/wiki/`}>\r\n                     <Button variant=\"outlined\">View Article</Button>\r\n                  </a>\r\n               </div>\r\n            </div>\r\n            <div className=\"Section\">\r\n               <div className=\"SectionTitleAndButton\">\r\n                  <h2>Ratings</h2>\r\n                  <a href={`/`}>\r\n                     <Button variant=\"outlined\">Rate This Prediction</Button>\r\n                  </a>\r\n               </div>\r\n               <Button variant=\"outlined\">SHOW MORE</Button>\r\n            </div>\r\n         </div>\r\n         {console.log(props.match.match.params.id)}\r\n      </div>\r\n   )\r\n}\r\n","import React, { useState, useEffect } from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport \"./lib/common.css\"\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\"\nimport { Navbar } from \"./lib/components/Navbar/Navbar\"\nimport { Home } from \"./pages/Home/Home\"\nimport { NotFound } from \"./pages/NotFound/NotFound\"\nimport { Search } from \"./pages/Search/Search\"\nimport { ProphetDetail } from \"./pages/ProphetDetail/ProphetDetail\"\nimport { PredictionDetail } from \"./pages/PredictionDetail/PredictionDetail\"\nimport { Spin } from \"antd\"\nimport axios from \"axios\"\n\nfunction App() {\n   const [showLoading, setShowLoading] = useState(false)\n   const [testImg, setTestImg] = useState(\"\")\n\n   useEffect(() => {\n      axios\n         .get(\"/api/test\")\n         .then((response) => {\n            // console.log(\"Test Image: 111111111111111111111\")\n            // console.log(response)\n            setTestImg(response.data.result[0].img)\n         })\n         .catch(err => console.log(err))\n   }, [])\n\n   return (\n      <Router>\n         <div className=\"App\">\n            <Navbar setShowLoading={setShowLoading} />\n            <Spin size=\"large\" spinning={showLoading}>\n               {showLoading ? (\n                  <div className=\"LoadingBG\"></div>\n               ) : (\n                  <Switch>\n                     <Route\n                        path=\"/prophetDetail/:id\"\n                        render={(match) => <ProphetDetail match={match} />}\n                     />\n                     <Route\n                        path=\"/predictionDetail/:id\"\n                        render={(match) => <PredictionDetail match={match} />}\n                     />\n                     <Route\n                        path=\"/prophets\"\n                        exact\n                        render={() => (\n                           <Search\n                              showProphets={true}\n                              showPredictions={false}\n                           />\n                        )}\n                     />\n                     <Route\n                        path=\"/predictions\"\n                        exact\n                        render={() => (\n                           <Search\n                              showProphets={false}\n                              showPredictions={true}\n                           />\n                        )}\n                     />\n                     <Route\n                        path=\"/search/:input\"\n                        render={(match) => (\n                           <Search\n                              showProphets={true}\n                              showPredictions={false}\n                              match={match}\n                           />\n                        )}\n                     />\n                     <Route\n                        path=\"/search/\"\n                        render={(match) => (\n                           <Search\n                              showProphets={true}\n                              showPredictions={false}\n                           />\n                        )}\n                     />\n                     <Route\n                        path=\"/test\"\n                        render={() => (\n                           <div>\n                              <img src={testImg} alt=\"testImg\" />\n                           </div>\n                        )}\n                     />\n                     <Route path=\"/\" exact component={Home} />\n                     <Route path=\"/\" component={NotFound} />\n                  </Switch>\n               )}\n            </Spin>\n         </div>\n      </Router>\n   )\n}\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}